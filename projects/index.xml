<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Projects on Lionel Garcia</title><link>https://lgrcia.github.io/projects/</link><description>Recent content in Projects on Lionel Garcia</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 01 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://lgrcia.github.io/projects/index.xml" rel="self" type="application/rss+xml"/><item><title>nuance</title><link>https://lgrcia.github.io/projects/nuance/</link><pubDate>Fri, 01 Jul 2022 00:00:00 +0000</pubDate><guid>https://lgrcia.github.io/projects/nuance/</guid><description/></item><item><title>Polar</title><link>https://lgrcia.github.io/projects/polar/</link><pubDate>Wed, 01 Jun 2022 00:00:00 +0000</pubDate><guid>https://lgrcia.github.io/projects/polar/</guid><description/></item><item><title>TRAPPIST-1h</title><link>https://lgrcia.github.io/projects/trappist-1h/</link><pubDate>Sun, 06 Feb 2022 00:00:00 +0000</pubDate><guid>https://lgrcia.github.io/projects/trappist-1h/</guid><description>&lt;p>(abstract) TRAPPIST-1 is a nearby ultra-cool dwarf star transited by seven rocky planets. We observed three transits of its outermost planet, TRAPPIST-1h, using the G141 grism of the Wide Field Camera 3 instrument aboard the Hubble Space Telescope to place constraints on its potentially cold atmosphere. In order to deal with the effect of stellar contamination, we model TRAPPIST-1 active regions as portions of a cooler and a hotter photosphere, and generate multi-temperature models that we compare to the out-of-transit spectrum of the star. Using the inferred spot parameters, we produce corrected transmission spectra for planet h under five transit configurations and compare these data to planetary atmospheric transmission models using the forward model CHIMERA. Our analysis reveals that TRAPPIST-1h is unlikely to host an aerosol-free H/He-dominated atmosphere. While the current data precision limits the constraints we can put on the planetary atmosphere, we find that the likeliest scenario is that of a flat, featureless transmission spectrum in the WFC3/G141 bandpass due to a high mean molecular weight atmosphere (≥1000 × solar), no atmosphere, or an opaque aerosol layer, all in absence of stellar contamination. This work outlines the limitations of modeling active photospheric regions with theoretical stellar spectra, and those brought by our lack of knowledge of the photospheric structure of ultracool dwarf stars. Further characterization of the planetary atmosphere of TRAPPIST-1h would require higher precision measurements over wider wavelengths, which will be possible with the James Webb Space Telescope.&lt;/p></description></item><item><title>prose</title><link>https://lgrcia.github.io/projects/prose/</link><pubDate>Tue, 01 Feb 2022 00:00:00 +0000</pubDate><guid>https://lgrcia.github.io/projects/prose/</guid><description>&lt;p>In Astronomy, a large number of observations lead to 2D images, often recorded in time. Either dealing with raw images or processed products, scientists must generally employ or trust &lt;a href="https://en.wikipedia.org/wiki/Pipeline_(computing)">pipelines&lt;/a>: a set of processing units sequentially executed on each image before being combined into exploitable datasets: photometric or spectroscopic light curves, spatial profiles, transients detection… and so on. Given their complexity and size, pipelines can be challenging to understand, document and maintain. This is particularly true for pipelines dedicated to medium-size instruments, developed by scientists (not engineers) as monoliths, with hardcoded settings and poor documentation. In opposition, pipelines from larger-budget instruments benefit from proper engineering teams, putting effort into maintaining tools for the scientific community (as does &lt;a href="https://www.eso.org/public/">ESO&lt;/a> for example). For building cryptic monoliths, no one is to blame. Scientists often lack the time and expertise to build such softwares, and legitimately prefer spending energy on the methods they develop and the science they study. prose is a Python package allowing scientists to build robust, modular and transparent pipelines, focusing on what matters. By providing a set of pre-implemented (documented) blocks, one can easily assemble and test processing sequences, and only develop the blocks they need. Not only this approach yield reproducible tools, it allows for rapid iteration towards pipelines with optimal scientific products.&lt;/p>
&lt;h1 id="principle">Principle&lt;/h1>
&lt;p>To success with this approach, prose features three key objects &lt;code>Image&lt;/code>, &lt;code>Block&lt;/code> and &lt;code>Sequence&lt;/code>&lt;/p>
&lt;div style="text-align:center">
&lt;img src="https://lgrcia.github.io/images/pipeline.png" width="650px">&lt;/img>
&lt;/div>
&lt;p>An &lt;code>Image&lt;/code> object contains the &lt;code>Image.data&lt;/code> as well as metadata in &lt;code>Image.header&lt;/code>.&lt;/p>
&lt;div style="text-align:center">
&lt;img src="https://lgrcia.github.io/images/image.png" width="320px">&lt;/img>
&lt;/div>
&lt;p>A &lt;code>Block&lt;/code> is a single unit of processing acting on the &lt;code>Image&lt;/code> object, which can read and write any of its attributes (or modify its data). Finally a &lt;code>Sequence&lt;/code> is a succesion of &lt;code>Block&lt;/code>.&lt;/p>
&lt;p>For more info check out the &lt;a href="https://lgrcia.github.io/prose-docs">documentation&lt;/a> and &lt;a href="https://ui.adsabs.harvard.edu/abs/2022MNRAS.509.4817G/abstract">paper&lt;/a>&lt;/p></description></item></channel></rss>